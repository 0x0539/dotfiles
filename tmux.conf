# Main tmux configuration file (~/.tmux.conf)

# ================ Common Configuration ================

# Plugin management
run-shell ~/Downloads/tmux-resurrect/resurrect.tmux
run-shell ~/Downloads/tmux-easy-motion/easy_motion.tmux
set -g @easy-motion-prefix "Space"

# Basic options
set -g mode-keys vi
set -g mouse on
set-option -g default-terminal screen-256color
set-option -g repeat-time 0

# Basic key bindings
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout
bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window
bind-key v copy-mode
bind-key p paste-buffer
bind-key C-o rotate-window
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
bind-key m set-option -gF mouse "#{?mouse,off,on}" \; display-message "#{?mouse,Mouse: ON,Mouse: OFF}"

# Window/pane navigation
bind-key o split-window -h
bind-key e split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Smart pane switching with vim awareness
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

# Window options
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta
setw -g monitor-activity on
set -g visual-activity on

# Status bar configuration
set-option -g status-interval 1
set-option -g status-style bg=black
set-option -g status-style fg=white
set -g status-left '#[fg=green]#H #[default]'
set -g status-right '%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# ================ macOS Specific Configuration ================
if-shell "uname | grep -q Darwin" {
    # macOS copy-paste integration
    bind-key -T copy-mode-vi v send -X begin-selection
    bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
    unbind -T copy-mode-vi Enter
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
    
    # Enable native macOS copy/paste
    set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
}

# ================ Linux/Ubuntu Specific Configuration ================
if-shell "uname | grep -q Linux" {
    set-option -g default-shell /bin/bash

    # Linux clipboard integration
    bind-key -T copy-mode-vi v send -X begin-selection
    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
    unbind -T copy-mode-vi Enter
    bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
    bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
}
